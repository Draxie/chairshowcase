/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 chair.gltf 
*/

import React, { useLayoutEffect, useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";

export default function Model(props) {
	const { nodes, materials } = useGLTF("/chair.gltf");

	// Refs

	const tl = useRef();
	const chair = useRef();
	const upperPillow = useRef();
	const lowerPillow = useRef();
	const upperSeat = useRef();
	const lowerSeat = useRef();
	const frame = useRef();

	const scroll = useScroll();

	useFrame(() => {
		tl.current.seek(scroll.offset * tl.current.duration());
	});

	// Animation

	useLayoutEffect(() => {
		tl.current = gsap.timeline({ duration: 10 });

		tl.current
			.to(
				chair.current.position,
				{
					duration: 0.8,
					z: 0,
				},
				0
			)
			.to(
				chair.current.rotation,
				{
					duration: 2,
					y: Math.PI / 5,
				},
				0
			)
			.to(
				chair.current.position,
				{
					duration: 1,
					x: -2.5,
				},
				2
			)
			.to(
				chair.current.position,
				{
					duration: 1,
					z: -0.5,
				},
				3.4
			)
			.to(
				frame.current.position,
				{
					duration: 1,
					z: 0.5,
				},
				3.4
			)
			.to(
				frame.current.position,
				{
					duration: 1,
					z: 0,
				},
				4.6
			)
			.to(
				chair.current.position,
				{
					duration: 1,
					z: 0,
				},
				4.6
			)
			.to(
				chair.current.position,
				{
					duration: 1,
					z: -0.5,
				},
				5.6
			)
			.to(
				lowerPillow.current.position,
				{
					duration: 1,
					z: 0.5,
				},
				5.6
			)
			.to(
				upperPillow.current.position,
				{
					duration: 1,
					z: 0.2,
				},
				5.6
			)
			.to(
				chair.current.position,
				{
					duration: 1,
					z: 0,
				},
				6.6
			)
			.to(
				lowerPillow.current.position,
				{
					duration: 1,
					z: 0,
				},
				6.6
			)
			.to(
				upperPillow.current.position,
				{
					duration: 1,
					z: 0,
				},
				6.6
			);
	}, []);

	return (
		<group {...props} dispose={null} ref={chair}>
			{/* Upper Pillow */}

			<group
				ref={upperPillow}
				position={[-0.005, 0.883, -0.189]}
				rotation={[1.381, 0, 0]}
				scale={[0.118, 0.087, 0.08]}
			>
				<mesh geometry={nodes.Mesh.geometry} material={materials.outline} />
				<mesh
					geometry={nodes.Mesh_1.geometry}
					material={materials["Material.002"]}
				/>
			</group>

			{/* Upper Seat */}

			<group
				ref={upperSeat}
				position={[-0.005, 0.885, -0.24]}
				rotation={[1.502, 0, 0]}
				scale={0.008}
			>
				<mesh
					geometry={nodes.Plane005.geometry}
					material={materials["black skin"]}
				/>
				<mesh
					geometry={nodes.Plane005_1.geometry}
					material={materials.outline}
				/>
			</group>

			{/* Frame */}

			<group
				ref={frame}
				position={[0.245, 0.584, 0.166]}
				scale={[0.169, 0.255, 0.266]}
			>
				<mesh geometry={nodes.Plane011.geometry} material={materials.outline} />
				<mesh
					geometry={nodes.Plane011_1.geometry}
					material={materials["black skin"]}
				/>
				<mesh
					geometry={nodes.Plane011_2.geometry}
					material={materials["black plactic"]}
				/>
				<mesh geometry={nodes.Plane011_3.geometry} material={materials.metal} />
				<mesh
					geometry={nodes.Plane011_4.geometry}
					material={materials["Material.001"]}
				/>
			</group>

			{/* Lower Pillow */}

			<group
				ref={lowerPillow}
				position={[-0.008, 0.571, -0.129]}
				rotation={[-0.208, 0, 0]}
				scale={[0.119, 0.115, 0.093]}
			>
				<mesh geometry={nodes.Cube007.geometry} material={materials.outline} />
				<mesh
					geometry={nodes.Cube007_1.geometry}
					material={materials["black skin"]}
				/>
			</group>

			{/* Lower Seat */}

			<group
				ref={lowerSeat}
				position={[0, 0.526, 0.045]}
				scale={[0.154, 0.202, 0.255]}
			>
				<mesh geometry={nodes.Cube009.geometry} material={materials.outline} />
				<mesh
					geometry={nodes.Cube009_1.geometry}
					material={materials["black skin"]}
				/>
			</group>
		</group>
	);
}

useGLTF.preload("/chair.gltf");
